.TH sshg3 1 "16 June 2017"  
.SH NAME
sshg3 \- Secure Shell terminal client - Generation 3
.SH SYNOPSIS
.ad l
\fBsshg3\fR \kx
.if (\nxu > (\n(.lu / 2)) .nr x (\n(.lu / 5)
'in \n(.iu+\nxu
[\fBoptions\fR]\&...
.br
\fBprofile\fR | 
[\fBuser@\fR]
\fBhost\fR 
[\fB#port\fR]
.br
[\fBcommand\fR]
'in \n(.iu-\nxu
.ad b
.SH DESCRIPTION
sshg3 is a 
program for logging in to a remote machine and executing commands on a 
remote machine. sshg3 provides secure, encrypted 
communication channels between two hosts over an unsecured network. It can 
be used to replace the unsecured rlogin, 
rsh, and telnet programs. Also X11 
connections and arbitrary TCP/IP ports can be forwarded over secure channels 
with sshg3.
.PP
To connect to a remote host using sshg3, give either the 
name of a connection profile defined in the 
\fBssh\-broker\-config.xml\fR file (\fIprofile\fR) 
or the IP address or DNS name of the remote host, optionally with the remote 
user name and the port of the Secure Shell server 
(\fI[user@]host[#port]\fR). If no user name is given, 
the local user name is assumed. If no port is given, the default Secure Shell 
port 22 is assumed. The remote host must be running a Secure Shell version 2 
server.
.PP
sshg3 acts as a Connection Broker client and launches 
the actual Connection Broker process, ssh\-broker\-g3 as a 
transport (in run-on-demand mode), or uses an already running Connection Broker process. 
The Connection Broker will ask the user to enter a password or a passphrase if they are 
needed for authentication. Connection Broker uses the configuration specified in the 
\fBssh\-broker\-config.xml\fR file.
.PP
When the user's identity has been accepted by the server, the server 
either executes the given command, or logs in to the machine and gives the 
user a normal shell. All communication with the remote command or shell will 
be automatically encrypted.
.PP
If no pseudo-tty has been allocated, the session is transparent and 
can be used to securely transfer binary data.
.PP
The session terminates when the command or shell on the remote machine 
exits and all X11 and TCP/IP connections have been closed. The exit status 
of the remote program is returned as the exit status of sshg3.
.SS "AGENT FORWARDING"
ssh\-broker\-g3 acts as an authentication agent, and the 
connection to the agent is automatically forwarded to the remote side unless 
disabled in the \fBssh\-broker\-config.xml\fR file or on the 
sshg3 command line (with the \fB\-a\fR 
option).
.SS "X11 FORWARDING"
If the user is using X11 (the \fBDISPLAY\fR environment 
variable is set), the connection to the X11 display can be automatically 
forwarded to the remote side in such a way that any X11 programs started 
from the shell (or command) will go through the encrypted channel, and the 
connection to the real X server will be made from the local machine. The 
user should not manually set \fBDISPLAY\fR. X11 connection 
forwarding can be allowed in the \fBssh\-broker\-config.xml\fR 
file or 
on the sshg3 command line (with the \fB+x\fR 
option). By default, X11 forwarding is disabled.
.PP
The \fBDISPLAY\fR value set by sshg3 will 
point to the server machine, but with a display number greater than zero. 
This is normal, and happens because sshg3 creates a "proxy" X 
server on the server machine for forwarding the connections over the 
encrypted channel.
.PP
sshg3 will also automatically set up the Xauthority data 
on the server machine. For this purpose, it will generate a random 
authentication cookie, store it in the Xauthority data on the server, and 
verify that any forwarded connections carry this cookie and replace it with 
the real cookie when the connection is opened. The real authentication 
cookie is never sent to the server machine (and no cookies are sent in the 
plain).
.SS "TCP PORT FORWARDING"
Forwarding of arbitrary TCP/IP connections over the secure channel can 
be specified either in the \fBssh\-broker\-config.xml\fR file or on the 
sshg3 command line (with the \fB\-L\fR and \fB\-R\fR 
options).
.SH OPTIONS
Command-line options override the settings in the 
\fBssh\-broker\-config.xml\fR file if the same option has been 
configured in both places. The following options are available:
.TP 
\fB\-a, \-\-no\-agent\-forwarding\fR
Disables authentication agent forwarding. In the factory settings, 
agent forwarding is enabled. 
.TP 
\fB+a\fR
Enables authentication agent forwarding. In the factory settings, 
agent forwarding is enabled, but it can be denied in the Connection Broker configuration 
file, in which case users cannot enable it on the command-line and 
this \fB+a\fR will be ignored. 
.TP 
\fB\-B, \-\-batch\-mode\fR
Uses batch mode. Fails authentication if it requires user interaction 
on the terminal. 

Using batch mode requires that you have previously saved the server 
host key on the client and set up a non-interactive method for user 
authentication (for example, host-based authentication or public-key 
authentication without a passphrase).
.TP 
\fB\-C\fR
Disables compression from the current connection.
.TP 
\fB+C\fR
Enables zlib compression for this particular connection.
.TP 
\fB\-c, \-\-ciphers=\fR\fILIST\fR
Sets the allowed ciphers to be offered to the server. List the cipher 
names in a comma-separated list. For example:

.nf
\-\-ciphers seed\-cbc@ssh.com,aes256\-cbc
.fi

Enter \fBhelp\fR as the value to view the currently supported 
cipher names.
.TP 
\fB\-D, \-\-debug=\fR\fILEVEL\fR
Sets the debug level. \fILEVEL\fR is a number 
from 0 to 99, where 99 specifies that all debug information should be 
displayed. This should be the first argument on the command line.
.RS 
\fBNote\fR

The debug level can be set only when 
the sshg3 command starts the Connection Broker. This option has no 
effect in the command if the Connection Broker is already running.
.RE
.TP 
\fB\-e, \-\-escape\-char=\fR\fICHAR\fR
Sets escape character (none: disabled, default: \fI~\fR). 
.TP 
\fB\-f, \-\-fork\-into\-background\fR
Forks into background mode after authentication. Use this option with tunnels and remote commands. Implies 
\fB\-S\fR (unless a command is specified). When tunnels have been 
specified, this option makes sshg3 stay in the 
background, so that it will wait for connections indefinitely. 
sshg3 has to be killed to stop listening.
.TP 
\fB\-g, \-\-gateway\fR
Gateways ports, which means that also other hosts may connect to 
locally forwarded ports. This option has to be specified before the 
"\fB\-L\fR" option. Note the logic of \fB+\fR and 
\fB\-\fR in this option.
.TP 
\fB+g\fR
Does not gateway ports. Listens to tunneling connections originating 
only from the localhost. This is the default value. Note the logic of 
\fB+\fR and \fB\-\fR in this option.
.TP 
\fB\-i \fR\fIFILE\fR
Defines that private keys defined in the identification file are used 
for public-key authentication.
.TP 
\fB\-K, \-\-identity\-key\-file=\fR\fIFILE\fR 
Defines that the given key file of a private key or certificate is 
used in user authentication. The path to the key file is given in the 
command.

If the file is a private key, it will be read and compared to the keys 
already known by the Connection Broker key store. If the key is not known, it will be 
decoded and added to the key store temporarily. If the file is a certificate 
and Connection Broker knows a matching private key, it will be used. Both the 
certificate and the private key can be given using multiple 
\fB\-K\fR options on command line.
.TP 
\fB\-L, \-\-localfwd\fR [\fBprotocol/\fR] [\fBlisten\-address:\fR] \fBlisten\-port:dst\-host:dst\-port\fR 
Forwards a port on the local (client) host to a remote destination 
host and port.

This allocates a listener port (\fIlisten-port\fR) 
on the local client. Whenever a connection is made to this listener, the 
connection is tunneled over Secure Shell to the remote server and another 
connection is made from the server to a specified destination host and port 
(\fIdst-host:dst-port\fR). The connection from the 
server onwards will not be secure, it is a normal TCP connection.

Giving the argument \fIprotocol\fR enables 
protocol-specific forwarding. The protocols implemented are 
\fBtcp\fR (default, no special processing), \fBftp\fR 
(temporary forwarding is created for FTP data channels, effectively securing 
the whole FTP session), and \fBsocks\fR.

With the \fBsocks\fR protocol, the syntax of the argument is 
"\fB\-L \fR\fIsocks/[listen-address:]listen-port\fR". 
When this is set, Tectia Client or ConnectSecure will act as a SOCKS server for other applications, 
creating forwards as requested by the SOCKS transaction. This supports both 
SOCKS4 and SOCKS5.

If \fIlisten-address\fR is given, only that 
interface on the client is listened. If it is omitted, all interfaces are 
listened.
.TP 
\fB\-l, \-\-user=\fR\fIUSERNAME\fR
Logs in using this user name.
.TP 
\fB\-m, \-\-macs=\fR\fILIST\fR
Sets the allowed MACs to be offered to the server. List the MAC 
names in a comma-separated list. For example:

.nf
\-\-macs hmac\-sha1\-96,hmac\-md5,hmac\-md5\-96
.fi

Enter \fBhelp\fR as the value to view the currently supported 
MAC names.
.TP 
\fB\-u, \-\-kexs=\fR\fIkexs\fR
Sets the allowed key exchange (KEX) methods to be offered to the server. List the KEX 
names in a comma-separated list. For example:

.nf
\-\-kexs diffie\-hellman\-group14\-sha224@ssh.com,diffie\-hellman\-group14\-sha256@ssh.com
.fi

Enter \fBhelp\fR as the value to view the currently supported 
KEX methods.

All the supported KEXs can operate in the FIPS mode on Linux, Windows, Solaris
and HP-UX Itanium. However, \fBdiffie\-hellman\-group15\-sha256@ssh.com\fR,
\fBdiffie\-hellman\-group15\-sha384@ssh.com\fR, \fBecdh\-sha2\-nistp256\fR,
\fBecdh\-sha2\-nistp384\fR and \fBecdh\-sha2\-nistp521\fR that are supported KEXs, 
cannot operate in the FIPS mode on HP-UX PA-RISC and IBM AIX due to issues in the OpenSSL 
cryptographic library version 0.9.8. 
.TP 
\fB\-j, \-\-hostkey\-algs=\fR\fIalgs\fR
Sets the allowed host key algorithms to be offered to the server. List 
the host key algorithms in a comma-separated list. For example:

.nf
\-\-hostkey\-algs ssh\-dss\-sha224@ssh.com,ssh\-dss\-sha256@ssh.com
.fi

Enter \fBhelp\fR as the value to view the currently supported 
host key algorithms.
.TP 
\fB\-n, \-\-dev\-null\fR
Redirects input from \fB/dev/null\fR
\&.
.TP 
\fB\-o \fR\fIoption\fR
Processes an option as if it was read from a Tectia Client 4.x-style 
configuration file. The supported options are 
\fBForwardX11\fR,
\fBForwardAgent\fR,
\fBAllowedAuthentications\fR and
\fBPidFile\fR.
For example, \fB\-o "ForwardX11=yes"\fR. Also
\fB\-o "PidFile=/tmp/sshg3.pid"\fR makes sshg3 to store its process ID
into file "/tmp/sshg3.pid" if it goes into background.
.TP 
\fB\-P, \-\-password=\fR \fBPASSWORD\fR | \fBfile://\fR \fBPASSWORDFILE\fR | \fBextprog://\fR \fBPROGRAM\fR 
Sets user password that the client will send as a response to password 
authentication. The \fIPASSWORD\fR can be given 
directly as an argument to this option (not recommended). Better 
alternatives are entering a path to a file containing the password 
(\fB\-\-password=file://\fR\fIPASSWORDFILE\fR), 
or entering a path to a program or script that outputs the password 
(\fB\-\-password=extprog://\fR\fIPROGRAM\fR).

When using the \fBextprog://\fR option to refer to a shell 
script, make sure the script also defines the user's shell, and outputs the 
actual password. Otherwise the executed program fails, because it does not 
know what shell to use for the shell script. For example, if the password 
string is defined in a file named \fBmy_password.txt\fR, and 
you want to use the bash shell, include these lines in the script:

.nf
#!/usr/bash
cat /full/pathname/to/my_password.txt
.fi
.RS 
\fBCaution\fR

Supplying the password on the command line is not a secure 
option. For example, in a multi-user environment, the password given 
directly on the command line is trivial to recover from the process table. 
You should set up a more secure way to authenticate. For non-interactive 
batch jobs, it is more secure to use public-key authentication without a 
passphrase, or host-based authentication. At a minimum, use a file or a 
program to supply the password.
.RE
.TP 
\fB\-p, \-\-port=\fR\fIPORT\fR
Connects to this port on the remote host. A Secure Shell server must 
be listening on the same port.
.TP 
\fB\-q\fR
Quiet mode, reports only fatal errors. 
This option overrides the \fBquiet\-mode\fR setting made in the 
Connection Broker configuration file.
.TP 
\fB\-R, \-\-remotefwd\fR [\fBprotocol/\fR] [\fBlisten\-address:\fR] \fBlisten\-port:dst\-host:dst\-port\fR 
Forwards a port on the remote (server) host to a destination host and 
port on the local side.

This allocates a listener port (\fIlisten-port\fR) 
on the remote server. Whenever a connection is made to this listener, the 
connection is tunneled over Secure Shell to the local client and another 
connection is made from the client to a specified destination host and port 
(\fIdst-host:dst-port\fR). The connection from the 
client onwards will not be secure, it is a normal TCP connection.

Giving the argument \fIprotocol\fR enables 
protocol-specific forwarding. The protocols implemented are 
\fBtcp\fR (default, no special processing) and \fBftp\fR 
(temporary forwarding is created for FTP data channels, effectively securing 
the whole FTP session).

If \fIlisten-address\fR is given, only that 
interface on the server is listened. If it is omitted, all interfaces are 
listened.
.TP 
\fB\-S, \-\-no\-session\-channel\fR
Does not request a session channel. This can be used with
port-forwarding requests if a session channel (and tty) is not
needed, or the server does not give one.
.TP 
\fB+S\fR
Requests a session channel. This is the default value.
.TP 
\fB\-s, \-\-subsystem \fR\fBsubsystem \fR\fBremote_server\fR
Sets a subsystem or a service to be invoked on the remote server.
The subsystem is specified as a remote command. For example: 
\fBsshg3 \-s sftp <server>\fR
.TP 
\fB\-t, \-\-tty\fR
Allocates a tty even if a command is given.
.TP 
\fB\-v, \-\-verbose\fR
Uses verbose mode. More information or error diagnostics are output if a 
connection fails.
.TP 
\fB\-x, \-X, \-\-no\-x11\-forwarding\fR
Disables X11 connection forwarding. This is the default value.
.TP 
\fB+x, +X\fR
Enables X11 connection forwarding.
.TP 
\fB\-z, \-\-broker\-log\-file=\fR\fIFILE\fR
Sets the Connection Broker log file to \fIFILE\fR. This 
option works only if ssh\-broker\-g3 gets started by this 
process).
.TP 
\fB\-\-aa, \-\-allowed\-authentications=\fR\fIMETHODS\fR 
Defines the only allowed methods that can be used in user 
authentication. List the methods in a comma-separated list. For example:

.nf
\-\-allowed\-authentications keyboard\-interactive,password
.fi

Enter \fBhelp\fR as the value to view the currently supported 
authentication methods.
.TP 
\fB\-\-abort\-on\-failing\-tunnel\fR
Aborts if creating a tunnel listener fails (for example, if the port 
is already reserved).
.TP 
\fB\-\-compressions=\fR\fIMETHODS\fR
Sets the allowed compression methods to be offered to the server. 
List the methods in a comma-separated list.

Enter \fBhelp\fR as the value to view the currently supported 
compression methods.
.TP 
\fB\-\-exclusive\fR
Defines that a new connection will be opened for each connection 
attempt, otherwise Connection Broker can reuse recently closed connections.
.TP 
\fB\-\-hostkey\-policy=\fR\fIPOLICY\fR
Defines the policy for checking server host keys and handling unknown server host keys.
The possible values are:
.RS 
.TP 0.2i
\(bu
\fBask\fR (default): The user will be asked to verify and accept the server host keys, if the keys
are not found in the host key storage or if the keys have changed.
.TP 0.2i
\(bu
\fBstrict\fR: The connection to the server will be allowed only if the host key is found in the user's known
host keys storage.
.TP 0.2i
\(bu
\fBtofu\fR: Trust on first use; new host keys are stored without prompting the user to accept them.
.TP 0.2i
\(bu
\fBadvisory\fR (\fInot recommended\fR): New host keys are stored without prompting the user to accept them,
and connections are allowed also to servers offering a changed host key.
.RE
.RS 
\fBCaution\fR

Consider carefully before setting the policy to \fBadvisory\fR. Disabling the host-key checks
makes the connection vulnerable to attacks.
.RE

You can also configure the host key policy in the \fBssh\-broker\-config.xml\fR configuration file with the 
\fB<auth\-server\-publickey>\fR element in the \fBdefault\-settings\fR and per profile.
See \fBssh-broker-config\fR(5). 

If this option is set on the command-line client and configured in 
the \fBssh\-broker\-config.xml\fR, the command-line value will be used.
.TP 
\fB\-\-identity=\fR\fIID\fR 
Defines that the ID of the private key is used in user authentication. 
The ID can be Connection Broker-internal ordinary number of the key, the key hash or the key file name.
.TP 
\fB\-\-identity\-key\-hash\fR \fIID\fR 
Defines the private key used in user authentication with the 
corresponding public key hash.
.TP 
\fB\-\-identity\-key\-id\fR \fIID\fR 
Defines that the Connection Broker-internal ordinary number of the key is used 
in user authentication.
.TP 
\fB\-\-keep\-alive=\fR\fIVALUE\fR
Defines how often keep-alive messages are sent to the Secure Shell server. 
Enter the value as seconds. The default value is 0, meaning that keep-alive 
messages are disabled.
.TP 
\fB\-\-kip\fR
Defines keyboard-interactive and password as the allowed methods for user authentication;
the same as 

.nf
\-\-allowed\-authentications keyboard\-interactive,password
.fi
.TP 
\fB\-\-remote\-environment name=\fR\fIVALUE\fR 
When this option is used, the defined environment variables are passed 
to the server from the client side. The environment variables are applied on the 
server when requesting a command, shell or subsystem. 

Note that the server can restrict the setting of environment 
variables.

You can also configure the environment variables to be passed to the 
server in the \fBssh\-broker\-config.xml\fR configuration file with the 
\fB<remote\-environment>\fR element in the 
\fBdefault\-settings\fR and per profile.
See \fBssh-broker-config\fR(5).

If the same variable is entered on the command-line client and configured in 
the \fBssh\-broker\-config.xml\fR, the command-line version will be used.
.TP 
\fB\-\-remote\-environment\-format name=\fR\fIVALUE\fR 
The defined environment variables are passed to the server from the 
client side. The Connection Broker processes the value before sending it to the server.

You can use \fB%U\fR in the \fBvalue\fR to indicate a 
user name. The Connection Broker replaces the \fB%U\fR with the actual user name 
before sending it to the server.

For more information, see the \fB\-\-remote\-environment\fR 
option above.
.TP 
\fB\-\-tcp\-connect\-timeout=\fR\fIVALUE\fR
Defines a timeout period (in seconds) for establishing a TCP connection
to the Secure Shell server. Enter the value as a positive number. 
.TP 
\fB\-V, \-\-version\fR
Displays program version and exits.
.TP 
\fB\-h, \-\-help, \-?\fR
Displays a short summary of command-line options and exits.
.SH COMMANDS
sshg3 can take as a command either of the following 
ones:
.TP 
\fBremote_command \fR\fI[arguments] ...\fR
Runs the command on a remote host.
.TP 
\fB\-s \fR\fIservice\fR
Enables a service in remote server.
.SH "ESCAPE SEQUENCES"
sshg3 supports escape sequences to manage a running 
session. For an escape sequence to take effect, it must be typed directly 
after a newline character (press Enter first). The escape 
sequences are not displayed on screen during typing.
.PP
The following escape sequences are supported:
.TP 
~.
Terminates the connection.
.TP 
~\fBCtrl\fR-Z
Suspends the session. 
.TP 
~~
Sends the escape character literally.
.TP 
~#
Lists forwarded connections. 
.TP 
~-
Disables the escape character irrevocably. 
.TP 
~?
Displays a summary of escape sequences. 
.TP 
~r
Initiates rekeying manually. 
.TP 
~s
Gives connection statistics, including server and client version, 
packets in, packets out, compression, key exchange algorithms, public-key 
algorithms, and symmetric ciphers. 
.TP 
~u
Uploads the chosen public key automatically to the server. If the user has
only one key, it will be uploaded. Otherwise the largest key with a
name that matches \fBid_rsa_<size>_a\fR will be selected.
.TP 
~U
Uploads a public key to the server. A list of available keys is
printed and the user is prompted to select one to be uploaded.
.TP 
~c
Gives statistics for individual channels (data window sizes etc). 
This is for debugging purposes. 
.TP 
~V
Dumps the client version number to stderr (useful for troubleshooting).
.SH "ENVIRONMENT VARIABLES"
Upon connection, the Secure Shell server will automatically set a 
number of environment variables that can be used by sshg3. 
The exact variables set depend on the Secure Shell server. The following 
variables can be used by sshg3:
.TP 
\fBDISPLAY\fR
The \fBDISPLAY\fR variable indicates the location of the 
X11 server. It is automatically set by the server to point to a value of 
the form \fBhostname:n\fR where \fBhostname\fR 
indicates the host on which the server and the shell are running, and 
\fBn\fR is an integer greater than or equal to 1. 
sshg3 uses this special value to forward X11 connections over 
the secure channel. 

The user should normally not set \fBDISPLAY\fR 
explicitly, as that will render the X11 connection unsecured (and will 
require the user to manually copy any required authorization 
cookies).
.TP 
\fBHOME\fR
The user's home directory.
.TP 
\fBLOGNAME\fR
Synonym for \fBUSER\fR; set for compatibility with 
systems using this variable.
.TP 
\fBMAIL\fR
The user's mailbox.
.TP 
\fBPATH\fR
Set to the default PATH, depending on the operating system or, on some 
systems, \fB/etc/environment\fR or \fB/etc/default/login\fR.
.TP 
\fBSSH_SOCKS_SERVER\fR
The address of the SOCKS server used by sshg3.
.TP 
\fBSSH2_AUTH_SOCK\fR
If this exists, it is used to indicate the path of a Unix-domain 
socket used to communicate with the authentication agent (or its local 
representative).
.TP 
\fBSSH2_CLIENT\fR
Identifies the client end of the connection. The variable contains 
three space-separated values: client IP address, client port number, and 
server port number.
.TP 
\fBSSH2_ORIGINAL_COMMAND\fR
This will be the original command given to sshg3 if a 
forced command is run. It can be used, for example, to fetch arguments 
from the other end. This does not have to be a real command, it can be the 
name of a file, device, parameters or anything else.
.TP 
\fBSSH2_TTY\fR
This is set to the name of the tty (path to the device) associated 
with the current shell or command. If the current session has no tty, 
this variable is not set.
.TP 
\fBTZ\fR
The time-zone variable is set to indicate the present time zone if 
it was set when the server was started (the server passes the value to new 
connections).
.TP 
\fBUSER\fR
The name of the user.
.PP
For a list of varibles set by Tectia Server, see the
\fBssh-server-g3\fR(8)
man page.
.SH "EXIT VALUES"
sshg3 returns the following values based on the 
result of the operation:
.PP
.nf
0     Operation was successful. 
1     sshg3 has encountered an error, 
      the reason is usually given in an error message. 
.fi
.PP
When executing remote commands, sshg3 exits with 
the status of the command run indicated with exit codes:
.PP
.nf
0     The remote command was run successfully. 
127   The requested remote command was not found.
.fi
.SH EXAMPLES
Connect as the local user name to host 
\fIremotehost\fR, port 2222, and open shell:
.PP
.nf
$ sshg3 remotehost#2222
.fi
.PP
Connect to the host specified by the connection profile 
\fIprofile1\fR in the \fBssh\-broker\-config.xml\fR 
file, and run the \fBwho\fR command (and exit after running the 
command):
.PP
.nf
$ sshg3 profile1 who
.fi
.PP
Connect as \fIuser\fR to host 
\fIremotehost\fR, and open a local port forwarding from 
port 143 on the client to port 143 on \fIimapserver\fR. 
Do not open shell. Also other hosts may connect to the local port. The 
connection from \fIremotehost\fR to 
\fIimapserver\fR will not be secured:
.PP
.nf
$ sshg3 \-L 143:imapserver:143 \-g \-S user@remotehost
.fi
.SH AUTHORS
SSH Communications Security Corporation
.PP
For more information, see http://www.ssh.com.
.SH "SEE ALSO"
\fBssh-broker-g3\fR(1), 
\fBssh-broker-config\fR(5), 
\fBssh-keygen-g3\fR(1), 
\fBscpg3\fR(1), 
\fBsftpg3\fR(1), 
\fBrlogin\fR(1),
\fBrsh\fR(1),
\fBtelnet\fR(1)
